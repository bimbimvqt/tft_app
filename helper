#!/bin/bash

# Define constants
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

validatedModule=0
appDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"

runScript() {
  cd "$appDir" && echoInfo "Executing commands in $appDir" && executeCommands
  cd "$appDir"
}

executeCommands() {
  for command in "${commands[@]}"; do
    case "$command" in
      "reload")
        executeGetPackages
        executeGenerate
        ;;
      "gen")
        executeGenerate
        ;;
      "get")
        executeGetPackages
        ;;
      "clean")
        executeClean
        ;;
      *)
        echoError "Unknown command: $command"
        exit 1
        ;;
    esac
  done
}

executeGenerate() {
  echoCommandInfo "GENERATED CLASS"
  flutter packages pub run build_runner build --delete-conflicting-outputs
}

executeGetPackages() {
  echoCommandInfo "GET PACKAGES"
  flutter packages get
}

executeClean() {
  echoCommandInfo "CLEAN BUILD"
  flutter clean
}

echoInfo() {
  c_echo "GREEN" "=====> $1"
}

echoCommandInfo() {
  c_echo "YELLOW" "==========> $1"
}

echoError() {
  c_echo "RED" "=====> ERROR: $1 <====="
}

c_echo() {
  local color="$1"
  local message="$2"
  local bold=$(tput bold)
  local colorCode

  case "$color" in
    "RED")
      colorCode="${RED}"
      ;;
    "GREEN")
      colorCode="${GREEN}"
      ;;
    "YELLOW")
      colorCode="${YELLOW}"
      ;;
    *)
      colorCode="${NC}"
      ;;
  esac

  printf "${colorCode}${bold}${message} ${NC}\n"
}

clear

commands=( "$@" )
commandsLength=${#commands[@]}
if [ "$commandsLength" -eq 0 ]; then
  echoError "You need to enter one or more command names: format/generate"
  exit 1
fi

runScript
